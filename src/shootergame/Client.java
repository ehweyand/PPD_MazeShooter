/*
Cliente reproduz tudo e exibe na tela (engine do jogo)
* Recebe informações do servidor e mostra na tela
* Envia comandos de ações dentro do jogo
 */
package shootergame;

import java.awt.event.KeyEvent;
import java.io.IOException;

public class Client extends javax.swing.JFrame {

    TCPCommunication tcpCom;
    String targetIP;
    Maze maze;
    String response;

    public Client() {
        initComponents();
        MainPnl.setFocusable(true);
        MainPnl.requestFocus();
        targetIP = "192.168.0.9";
        this.tcpCom = new TCPCommunication(targetIP);
        this.maze = new Maze(); // já roda a Thread da classe Maze
        response = ""; //variável para receber a resposta do servidor
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPnl = new javax.swing.JPanel();
        btnD = new javax.swing.JButton();
        btnS = new javax.swing.JButton();
        btnW = new javax.swing.JButton();
        btnA = new javax.swing.JButton();
        comboPlayer = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnAtirar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainPnl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MainPnlKeyReleased(evt);
            }
        });

        btnD.setText("D");
        btnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDActionPerformed(evt);
            }
        });

        btnS.setText("S");
        btnS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSActionPerformed(evt);
            }
        });

        btnW.setText("W");
        btnW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWActionPerformed(evt);
            }
        });

        btnA.setText("A");
        btnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAActionPerformed(evt);
            }
        });

        comboPlayer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B" }));
        comboPlayer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPlayerItemStateChanged(evt);
            }
        });

        jLabel1.setText("Mover Player:");

        btnAtirar.setText("ATIRAR! (X)");
        btnAtirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtirarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainPnlLayout = new javax.swing.GroupLayout(MainPnl);
        MainPnl.setLayout(MainPnlLayout);
        MainPnlLayout.setHorizontalGroup(
            MainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPnlLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPnlLayout.createSequentialGroup()
                        .addGap(0, 49, Short.MAX_VALUE)
                        .addComponent(btnA, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MainPnlLayout.createSequentialGroup()
                                .addComponent(btnS, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnD, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnW, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAtirar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127))
        );
        MainPnlLayout.setVerticalGroup(
            MainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPnlLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(MainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnW, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnD, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnS, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnA, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnAtirar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWActionPerformed
        try {
            response = tcpCom.sendCommand(comboPlayer.getSelectedItem() + "W");
            handleResponse(response);
        } catch (IOException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnWActionPerformed

    private void btnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAActionPerformed
        try {
            response = tcpCom.sendCommand(comboPlayer.getSelectedItem() + "A");
            handleResponse(response);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAActionPerformed

    private void btnSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSActionPerformed
        try {
            response = tcpCom.sendCommand(comboPlayer.getSelectedItem() + "S");
            handleResponse(response);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSActionPerformed

    private void btnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDActionPerformed
        try {
            response = tcpCom.sendCommand(comboPlayer.getSelectedItem() + "D");
            handleResponse(response);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDActionPerformed

    private void MainPnlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MainPnlKeyReleased

        try {
            if (evt.getKeyCode() == KeyEvent.VK_W) {
                response = tcpCom.sendCommand(comboPlayer.getSelectedItem() + "W");
                handleResponse(response);
            } else if (evt.getKeyCode() == KeyEvent.VK_A) {
                response = tcpCom.sendCommand(comboPlayer.getSelectedItem() + "A");
                handleResponse(response);
            } else if (evt.getKeyCode() == KeyEvent.VK_S) {
                response = tcpCom.sendCommand(comboPlayer.getSelectedItem() + "S");
                handleResponse(response);
            } else if (evt.getKeyCode() == KeyEvent.VK_D) {
                response = tcpCom.sendCommand(comboPlayer.getSelectedItem() + "D");
                handleResponse(response);
            } else if (evt.getKeyCode() == KeyEvent.VK_X) { // Atirar!
                response = tcpCom.sendCommand(comboPlayer.getSelectedItem() + "X");
                handleResponse(response);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_MainPnlKeyReleased

    private void comboPlayerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPlayerItemStateChanged
        MainPnl.requestFocus();
    }//GEN-LAST:event_comboPlayerItemStateChanged

    private void btnAtirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtirarActionPerformed
        try {
            tcpCom.sendCommand(comboPlayer.getSelectedItem() + "X");
            handleResponse(response);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAtirarActionPerformed

    private void handleResponse(String response) {
        // Imprimir o Maze 1 vez só
        System.out.println("Opa, recebi");
        this.maze.printMaze();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPnl;
    private javax.swing.JButton btnA;
    private javax.swing.JButton btnAtirar;
    private javax.swing.JButton btnD;
    private javax.swing.JButton btnS;
    private javax.swing.JButton btnW;
    private javax.swing.JComboBox<String> comboPlayer;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
